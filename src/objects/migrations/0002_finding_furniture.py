# Generated by Django 3.1.2 on 2021-10-02 13:21

import ckeditor.fields
from django.db import migrations, models
import django.utils.timezone
import objects.models


class Migration(migrations.Migration):

    dependencies = [
        ('filters', '0001_initial'),
        ('objects', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Furniture',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=256, verbose_name='Nom du meuble')),
                ('slug', models.SlugField(blank=True, help_text='Laissez vide pour que le champ se remplisse seul', verbose_name='Slug')),
                ('reference', models.CharField(blank=True, max_length=256, null=True, verbose_name='référence du meuble')),
                ('description', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='description du meuble')),
                ('first_image', models.FileField(blank=True, help_text="Assurez vous que l'image n'est pas trop lourde.", null=True, upload_to=objects.models.logo_upload_to_furnitures, verbose_name='photo n°1')),
                ('price', models.IntegerField(blank=True, verbose_name='prix du meuble')),
                ('weight', models.IntegerField(blank=True, verbose_name='poids du meuble en kg')),
                ('height', models.IntegerField(blank=True, verbose_name='hauteur du meuble en cm')),
                ('width', models.IntegerField(blank=True, verbose_name='largeur du meuble en cm')),
                ('depth', models.IntegerField(blank=True, verbose_name='profondeur du meuble en cm')),
                ('key_words', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='mots clés pouvant être associés au meuble')),
                ('is_negotiable', models.BooleanField(default=False, help_text='Le prix de cet objet est-il négociable?', verbose_name='Prix négociable?')),
                ('is_outstanding', models.BooleanField(default=False, help_text='Cet objet est-il une pièce exceptionnelle?', verbose_name='Pièce exceptionnelle?')),
                ('is_hightlighted', models.BooleanField(default=False, help_text='Cet objet doit-il être mis en avant?', verbose_name='Pièce mise en avant?')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Date de mise à jour')),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date de création')),
                ('categories', models.ManyToManyField(blank=True, related_name='furnitures', to='filters.Category', verbose_name="catégorie d'objets")),
                ('colors', models.ManyToManyField(blank=True, related_name='furnitures', to='filters.Color', verbose_name='Couleurs du meuble')),
                ('designer', models.ManyToManyField(blank=True, related_name='furnitures', to='filters.Designer', verbose_name='designer du meuble')),
                ('materials', models.ManyToManyField(blank=True, related_name='furnitures', to='filters.Material', verbose_name='Matériaux du meuble')),
                ('state', models.ManyToManyField(blank=True, related_name='furnitures', to='filters.State', verbose_name='Etat du meuble')),
                ('style', models.ManyToManyField(blank=True, related_name='furnitures', to='filters.Style', verbose_name='Style du meuble')),
                ('subcategories', models.ManyToManyField(blank=True, related_name='furnitures', to='filters.SubCategory', verbose_name="Sous catégorie d'objets")),
            ],
            options={
                'verbose_name': 'Meuble',
                'verbose_name_plural': 'Meubles',
            },
        ),
        migrations.CreateModel(
            name='Finding',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=256, verbose_name='Nom de la trouvaille')),
                ('slug', models.SlugField(blank=True, help_text='Laissez vide pour que le champ se remplisse seul', verbose_name='Slug')),
                ('reference', models.CharField(blank=True, max_length=256, null=True, verbose_name='référence de la trouvaille')),
                ('description', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='description de la trouvaille')),
                ('first_image', models.FileField(blank=True, help_text="Assurez vous que l'image n'est pas trop lourde.", null=True, upload_to=objects.models.logo_upload_to_findings, verbose_name='photo n°1')),
                ('price', models.IntegerField(blank=True, verbose_name='prix de la trouvaille')),
                ('weight', models.IntegerField(blank=True, verbose_name='poids de la trouvaille en kg')),
                ('height', models.IntegerField(blank=True, verbose_name='hauteur de la trouvaille en cm')),
                ('width', models.IntegerField(blank=True, verbose_name='largeur de la trouvaille en cm')),
                ('depth', models.IntegerField(blank=True, verbose_name='profondeur de la trouvaille en cm')),
                ('key_words', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='mots clés pouvant être associés à la trouvaille')),
                ('is_negotiable', models.BooleanField(default=False, help_text='Le prix de cet objet est-il négociable?', verbose_name='Prix négociable?')),
                ('is_outstanding', models.BooleanField(default=False, help_text='Cet objet est-il une pièce exceptionnelle?', verbose_name='Pièce exceptionnelle?')),
                ('is_hightlighted', models.BooleanField(default=False, help_text='Cet objet doit-il être mis en avant?', verbose_name='Pièce mise en avant?')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Date de mise à jour')),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date de création')),
                ('categories', models.ManyToManyField(blank=True, related_name='findings', to='filters.Category', verbose_name="catégorie d'objets")),
                ('colors', models.ManyToManyField(blank=True, related_name='findings', to='filters.Color', verbose_name='Couleurs de la trouvaille')),
                ('designer', models.ManyToManyField(blank=True, related_name='findings', to='filters.Designer', verbose_name='designer de la trouvaille')),
                ('materials', models.ManyToManyField(blank=True, related_name='findings', to='filters.Material', verbose_name='Matériaux de la trouvaille')),
                ('state', models.ManyToManyField(blank=True, related_name='findings', to='filters.State', verbose_name='Etat de la trouvaille')),
                ('style', models.ManyToManyField(blank=True, related_name='findings', to='filters.Style', verbose_name='Style de la trouvaille')),
                ('subcategories', models.ManyToManyField(blank=True, related_name='findings', to='filters.SubCategory', verbose_name="Sous catégorie d'objets")),
            ],
            options={
                'verbose_name': 'Trouvaille',
                'verbose_name_plural': 'Trouvailles',
            },
        ),
    ]
